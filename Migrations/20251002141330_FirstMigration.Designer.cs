// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskTest.Context;

#nullable disable

namespace TaskTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251002141330_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskTest.Models.Estimacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Estimaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Duration = 5
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Duration = 10
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Duration = 15
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Duration = 20
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Duration = 25
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Duration = 30
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Duration = 40
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Duration = 50
                        });
                });

            modelBuilder.Entity("TaskTest.Models.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completado")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<int>("EstimacionId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaTarea")
                        .HasColumnType("date");

                    b.Property<int>("Visibilidad")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EstimacionId");

                    b.ToTable("Tareas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completado = true,
                            Descripcion = "Diseñar la arquitectura del sistema",
                            Estado = 1,
                            EstimacionId = 8,
                            FechaTarea = new DateOnly(2025, 10, 1),
                            Visibilidad = 1
                        },
                        new
                        {
                            Id = 2,
                            Completado = true,
                            Descripcion = "Implementar autenticación JWT",
                            Estado = 0,
                            EstimacionId = 5,
                            FechaTarea = new DateOnly(2025, 10, 2),
                            Visibilidad = 2
                        },
                        new
                        {
                            Id = 3,
                            Completado = true,
                            Descripcion = "Configurar CI/CD en GitHub Actions",
                            Estado = 2,
                            EstimacionId = 3,
                            FechaTarea = new DateOnly(2025, 10, 3),
                            Visibilidad = 1
                        },
                        new
                        {
                            Id = 4,
                            Completado = false,
                            Descripcion = "Crear pruebas unitarias para UserService",
                            Estado = 1,
                            EstimacionId = 4,
                            FechaTarea = new DateOnly(2025, 10, 4),
                            Visibilidad = 2
                        },
                        new
                        {
                            Id = 5,
                            Completado = true,
                            Descripcion = "Optimizar consultas con EF Core",
                            Estado = 0,
                            EstimacionId = 6,
                            FechaTarea = new DateOnly(2025, 10, 5),
                            Visibilidad = 1
                        },
                        new
                        {
                            Id = 6,
                            Completado = false,
                            Descripcion = "Integrar pagos con Stripe",
                            Estado = 2,
                            EstimacionId = 7,
                            FechaTarea = new DateOnly(2025, 10, 6),
                            Visibilidad = 2
                        },
                        new
                        {
                            Id = 7,
                            Completado = false,
                            Descripcion = "Revisión de seguridad OWASP",
                            Estado = 1,
                            EstimacionId = 5,
                            FechaTarea = new DateOnly(2025, 10, 7),
                            Visibilidad = 1
                        },
                        new
                        {
                            Id = 8,
                            Completado = false,
                            Descripcion = "Crear documentación de API con Swagger",
                            Estado = 2,
                            EstimacionId = 2,
                            FechaTarea = new DateOnly(2025, 10, 8),
                            Visibilidad = 1
                        },
                        new
                        {
                            Id = 9,
                            Completado = false,
                            Descripcion = "Implementar notificaciones en tiempo real",
                            Estado = 0,
                            EstimacionId = 6,
                            FechaTarea = new DateOnly(2025, 10, 9),
                            Visibilidad = 2
                        },
                        new
                        {
                            Id = 10,
                            Completado = true,
                            Descripcion = "Refactorizar código legacy",
                            Estado = 1,
                            EstimacionId = 4,
                            FechaTarea = new DateOnly(2025, 10, 10),
                            Visibilidad = 1
                        });
                });

            modelBuilder.Entity("TaskTest.Models.Tarea", b =>
                {
                    b.HasOne("TaskTest.Models.Estimacion", "Estimacion")
                        .WithMany()
                        .HasForeignKey("EstimacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimacion");
                });
#pragma warning restore 612, 618
        }
    }
}
